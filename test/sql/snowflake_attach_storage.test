# name: test/sql/snowflake_attach_storage.test
# description: Test ATTACH DATABASE functionality for Snowflake storage extension
# group: [sql]

# Require statement will ensure this test is run with this extension loaded
require snowflake

# Test 1: ATTACH with missing connection info
# Currently fails because attach function returns nullptr
statement error
ATTACH '' AS sf_db (TYPE snowflake);
----
INTERNAL Error: AttachedDatabase - attach function did not return a catalog

# Test 2: ATTACH with incomplete connection string
statement error
ATTACH 'account=test' AS sf_db (TYPE snowflake);
----
Invalid Input Error: Snowflake connection string missing required 'user' parameter

# Test 3: ATTACH with valid-looking connection (will fail at connection time)
statement error
ATTACH 'account=test;user=test;password=test;warehouse=test' AS sf_db (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

# Test 4: ATTACH with database specified
statement error
ATTACH 'account=test;user=test;password=test;warehouse=test;database=testdb' AS sf_db (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

# Test 5: ATTACH with all parameters
statement error
ATTACH 'account=test;user=test;password=test;warehouse=test;database=testdb;role=testrole' AS sf_db (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

# Test 6: Multiple ATTACH statements (different aliases)
statement error
ATTACH 'account=test1;user=test;password=test;warehouse=test' AS sf_db1 (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

statement error
ATTACH 'account=test2;user=test;password=test;warehouse=test' AS sf_db2 (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

# Test 7: ATTACH with special characters in alias
statement error
ATTACH 'account=test;user=test;password=test;warehouse=test' AS "sf-db-prod" (TYPE snowflake);
----
Runtime Error: Failed to connect to Snowflake

# Test 8: Future URI format support
statement error
ATTACH 'snowflake://test:pass@account/database?warehouse=test' AS sf_db (TYPE snowflake);
----
Invalid Input Error: URI format not yet supported for Snowflake connections

# Test 9: DETACH functionality (once ATTACH works)
# This would test removing an attached database
statement error
DETACH sf_db;
----
Catalog Error: Database "sf_db" does not exist!

# Test 10: Schema-qualified access (future functionality)
# Once ATTACH works, this would access tables through the catalog
statement error
SELECT * FROM sf_db.public.test_table;
----
Catalog Error: Database "sf_db" does not exist!

# Integration tests with real credentials (commented out)
# These demonstrate the expected behavior with working credentials

# # Attach a Snowflake database
# statement ok
# ATTACH 'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH;database=SNOWFLAKE_SAMPLE_DATA' AS snow_sample (TYPE snowflake);

# # Query tables using schema-qualified names
# query I
# SELECT COUNT(*) FROM snow_sample.tpch_sf1.customer;
# ----
# 150000

# # Join Snowflake table with local DuckDB table
# statement ok
# CREATE TABLE local_nations AS SELECT * FROM VALUES 
#     (0, 'ALGERIA'), 
#     (1, 'ARGENTINA'), 
#     (2, 'BRAZIL') AS t(n_nationkey, n_name);

# query II
# SELECT n.n_name, COUNT(*) as customer_count
# FROM local_nations n
# JOIN snow_sample.tpch_sf1.customer c ON n.n_nationkey = c.c_nationkey
# GROUP BY n.n_name
# ORDER BY n.n_name;
# ----
# ALGERIA	6238
# ARGENTINA	5953
# BRAZIL	5975

# # List schemas in attached database
# query I
# SELECT schema_name FROM information_schema.schemata 
# WHERE catalog_name = 'snow_sample'
# ORDER BY schema_name;
# ----
# INFORMATION_SCHEMA
# PUBLIC
# TPCDS_SF10TCL
# TPCDS_SF100TCL
# TPCH_SF1
# TPCH_SF10
# TPCH_SF100
# TPCH_SF1000

# # List tables in a specific schema
# query I
# SELECT table_name FROM information_schema.tables
# WHERE table_catalog = 'snow_sample' 
#   AND table_schema = 'TPCH_SF1'
#   AND table_name LIKE 'CUSTOMER%'
# ORDER BY table_name;
# ----
# CUSTOMER

# # Detach the database
# statement ok
# DETACH snow_sample;

# # Verify it's gone
# statement error
# SELECT * FROM snow_sample.tpch_sf1.customer;
# ----
# Catalog Error: Database "snow_sample" does not exist!

# # Test connection pooling with multiple ATTACHes
# statement ok
# ATTACH 'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH;database=DB1' AS db1 (TYPE snowflake);

# statement ok
# ATTACH 'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH;database=DB2' AS db2 (TYPE snowflake);

# # Both should work and potentially share the same underlying connection
# query I
# SELECT COUNT(*) FROM db1.information_schema.tables;
# ----
# 100

# query I
# SELECT COUNT(*) FROM db2.information_schema.tables;
# ----
# 150

# statement ok
# DETACH db1;

# statement ok
# DETACH db2;