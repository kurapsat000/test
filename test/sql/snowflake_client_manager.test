# name: test/sql/snowflake_client_manager.test
# description: Test snowflake client manager connection pooling and management
# group: [sql]

# Require statement will ensure this test is run with this extension loaded
require snowflake

# Test 1: Basic connection string validation
statement error
SELECT * FROM snowflake_scan('', 'SELECT 1');
----
Failed to bind snowflake_scan: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string missing required 'account' parameter"}

# Test 2: Invalid connection string - missing account
statement error
SELECT * FROM snowflake_scan('user=test;password=test', 'SELECT 1');
----
Failed to bind snowflake_scan: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string missing required 'account' parameter"}

# Test 3: Invalid connection string - missing user
statement error
SELECT * FROM snowflake_scan('account=test;password=test', 'SELECT 1');
----
Failed to bind snowflake_scan: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string missing required 'user' parameter"}

# Test 4: Invalid connection string - missing password
statement error
SELECT * FROM snowflake_scan('account=test;user=test', 'SELECT 1');
----
Failed to bind snowflake_scan: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string missing required 'password' parameter"}

# Test 5: Connection pooling - same connection string should reuse connection
# This tests that the client manager reuses connections for identical connection strings
# Note: Without real credentials, we can only test the validation path
statement error
SELECT * FROM snowflake_scan('account=test;user=test;password=test;warehouse=test', 'SELECT 1');
----
Failed to initialize connection

# Test 6: Multiple different connections
# Each unique connection string should create a new connection
statement error
SELECT * FROM snowflake_scan('account=test1;user=test;password=test;warehouse=test', 'SELECT 1');
----
Failed to initialize connection

statement error
SELECT * FROM snowflake_scan('account=test2;user=test;password=test;warehouse=test', 'SELECT 1');
----
Failed to initialize connection

# Test 7: Connection with all optional parameters
statement error
SELECT * FROM snowflake_scan(
    'account=test;user=test;password=test;warehouse=test;database=testdb;schema=testschema;role=testrole',
    'SELECT 1'
);
----
Failed to initialize connection

# Test 8: Test snowflake_attach function exists
statement error
SELECT snowflake_attach('');
----
Failed to bind snowflake_attach: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string missing required 'account' parameter"}

# Test 9: Test snowflake_attach with valid-looking connection string
# This should fail at connection time, not parsing time
statement error
SELECT snowflake_attach('account=test;user=test;password=test;warehouse=test');
----
Failed to initialize connection

# Test 10: Connection string with special characters (URL encoding)
statement error
SELECT * FROM snowflake_scan(
    'account=test;user=test@domain.com;password=p@ssw0rd!;warehouse=test',
    'SELECT 1'
);
----
Failed to initialize connection

# Test 11: Case sensitivity in connection parameters
statement error
SELECT * FROM snowflake_scan(
    'ACCOUNT=test;USER=test;PASSWORD=test;WAREHOUSE=test',
    'SELECT 1'
);
----
Failed to initialize connection

# Test 12: Connection string with extra semicolons
statement error
SELECT * FROM snowflake_scan(
    'account=test;;user=test;password=test;;warehouse=test;',
    'SELECT 1'
);
----
Failed to initialize connection

# Test 13: Empty parameter values
statement error
SELECT * FROM snowflake_scan(
    'account=;user=test;password=test;warehouse=test',
    'SELECT 1'
);
----
Failed to bind snowflake_scan: {"exception_type":"Invalid Input","exception_message":"Snowflake connection string has empty 'account' parameter"}

# Test 14: Whitespace in connection string
statement error
SELECT * FROM snowflake_scan(
    '  account=test; user=test ; password=test ;warehouse=test  ',
    'SELECT 1'
);
----
Failed to initialize connection

# Integration tests that would work with real credentials (commented out)
# These demonstrate how the connection pooling should work in practice

# # Test connection reuse - second query should use cached connection
# query I
# SELECT COUNT(*) FROM snowflake_scan(
#     'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH',
#     'SELECT 1'
# );
# ----
# 1
#
# # Same connection string - should reuse connection from pool
# query I  
# SELECT COUNT(*) FROM snowflake_scan(
#     'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH',
#     'SELECT 2'
# );
# ----
# 1
#
# # Different connection string - should create new connection
# query I
# SELECT COUNT(*) FROM snowflake_scan(
#     'account=real_account;user=real_user;password=real_pass;warehouse=COMPUTE_WH;database=TESTDB',
#     'SELECT 3'
# );
# ----
# 1