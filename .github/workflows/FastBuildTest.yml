name: Fast Build Test
on:
  workflow_dispatch:
  push:
    branches: [ "working-from-summer2025" ]

jobs:
  debug-build-test:
    name: Debug Build Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Free Disk Space (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          df -h

      - name: Install build tools (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

      - name: Debug DuckDB version
        run: |
          cd duckdb && git describe --tags && git log -1 --oneline

      - name: Debug build environment
        run: |
          which cmake
          cmake --version
          which ninja
          ninja --version
          which gcc
          gcc --version

      - name: Build extension with debug info
        run: |
          set -x
          export VERBOSE=1
          # Don't use GEN=ninja to match CI behavior
          make release
        env:
          VERBOSE: 1

      - name: Test extension loading
        run: |
          cd build/release
          ./duckdb -c "LOAD './build/release/extension/snowflake/snowflake.duckdb_extension'; SELECT 'Extension loaded successfully' as result;"

      - name: Show build artifacts
        run: |
          find build/release -name "*.duckdb_extension" -ls || echo "No extension files found" 